asyncapi: 3.0.0
info:
  title: Reya DEX Trading WebSocket API v2
  version: 2.1.0
  description: |
    Real-time WebSocket API for Reya Network's decentralized exchange.

    This API follows a subscription-based pattern where:
    1. Clients subscribe to channels and receive initial snapshots
    2. Subsequent updates are sent as incremental deltas
    3. All data uses human-readable formats without blockchain specifics
  contact:
    name: Reya Network
    url: https://reya.xyz
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  tags:
    - name: control
      description: Connection control and subscription management
    - name: markets
      description: Market data and summaries
    - name: wallet
      description: Wallet-specific data (positions, orders, executions)
    - name: prices
      description: Real-time price feeds
  externalDocs:
    description: Reya Network Documentation
    url: https://docs.reya.xyz

servers:
  production:
    host: ws.reya.xyz
    protocol: wss
    description: Production WebSocket server
  staging:
    host: websocket-staging.reya.xyz
    protocol: wss
    description: Staging WebSocket server
  test:
    host: websocket-testnet.reya.xyz
    protocol: wss
    description: Test WebSocket server

defaultContentType: application/json

channels:
  control:
    description: |
      Bidirectional control channel for subscription management.

      Subscription Flow:
      1. Client sends subscribe message with channel
      2. Server responds with snapshot message containing initial data
      3. Server sends update messages for incremental changes
      4. Client can unsubscribe to stop receiving updates
    address: null
    messages:
      controlMessages:
        $ref: '#/components/messages/ControlMessages'
    bindings:
      ws: {}

  marketsSummary:
    address: /v2/markets/summary
    description: Real-time updates for all market summaries
    messages:
      marketsSummaryData:
        $ref: '#/components/messages/MarketsSummaryData'

  marketSummary:
    address: /v2/market/{symbol}/summary
    description: Real-time updates for a specific market's summary
    parameters:
      symbol:
        $ref: '#/components/parameters/Symbol'
    messages:
      marketSummaryData:
        $ref: '#/components/messages/MarketSummaryData'

  marketExecutions:
    address: /v2/market/{symbol}/perpExecutions
    description: Real-time perpetual executions for a specific market
    parameters:
      symbol:
        $ref: '#/components/parameters/Symbol'
    messages:
      marketExecutionData:
        $ref: '#/components/messages/MarketExecutionData'

  walletData:
    address: /v2/wallet/{address}/{dataType}
    description: Real-time wallet data updates (positions, orders, executions)
    parameters:
      address:
        $ref: '#/components/parameters/WalletAddress'
      dataType:
        description: Type of wallet data
        enum: [positions, orderChanges, perpExecutions]
    messages:
      walletData:
        $ref: '#/components/messages/WalletData'

  pricesGlobal:
    address: /v2/prices
    description: Real-time price updates for all symbols
    messages:
      pricesData:
        $ref: '#/components/messages/PricesData'

  priceSymbol:
    address: /v2/prices/{symbol}
    description: Real-time price updates for a specific symbol
    parameters:
      symbol:
        $ref: '#/components/parameters/Symbol'
    messages:
      priceData:
        $ref: '#/components/messages/PriceData'

operations:
  # Control Operations
  subscribe:
    action: send
    channel:
      $ref: '#/channels/control'
    summary: Subscribe to a data channel
    description: |
      Subscribe to a specific channel to receive data updates.
      Server will respond with initial snapshot followed by incremental updates.
    messages:
      - $ref: '#/components/messages/Subscribe'

  unsubscribe:
    action: send
    channel:
      $ref: '#/channels/control'
    summary: Unsubscribe from a data channel
    messages:
      - $ref: '#/components/messages/Unsubscribe'

  ping:
    action: send
    channel:
      $ref: '#/channels/control'
    summary: Send ping to test connection
    messages:
      - $ref: '#/components/messages/Ping'

  receiveControlResponse:
    action: receive
    channel:
      $ref: '#/channels/control'
    summary: Receive control responses (pong, subscribed, unsubscribed, errors)
    messages:
      - $ref: '#/components/messages/ControlMessages'

  # Data Reception Operations
  receiveMarketData:
    action: receive
    channels:
      - $ref: '#/channels/marketsSummary'
      - $ref: '#/channels/marketSummary'
      - $ref: '#/channels/marketExecutions'
    summary: Receive market-related data updates
    description: Snapshots and updates for market summaries and executions

  receiveWalletData:
    action: receive
    channel:
      $ref: '#/channels/walletData'
    summary: Receive wallet-specific data updates
    description: Snapshots and updates for positions, orders, and executions

  receivePriceData:
    action: receive
    channels:
      - $ref: '#/channels/pricesGlobal'
      - $ref: '#/channels/priceSymbol'
    summary: Receive price data updates
    description: Snapshots and updates for price information

components:
  parameters:
    Symbol:
      description: Trading symbol (e.g., BTCRUSDPERP, ETHRUSD)
      schema:
        $ref: './trading-schemas.json#/definitions/Symbol'

    WalletAddress:
      description: Ethereum wallet address
      schema:
        $ref: './trading-schemas.json#/definitions/Address'

  messages:
    # Control Messages (sent by client)
    Subscribe:
      name: subscribe
      title: Subscribe Message
      summary: Subscribe to a channel
      payload:
        type: object
        required: [type, channel]
        properties:
          type:
            const: subscribe
          channel:
            $ref: './trading-schemas.json#/definitions/ChannelAddress'
          id:
            type: string
            description: Optional request identifier

    Unsubscribe:
      name: unsubscribe
      title: Unsubscribe Message
      summary: Unsubscribe from a channel
      payload:
        type: object
        required: [type, channel]
        properties:
          type:
            const: unsubscribe
          channel:
            $ref: './trading-schemas.json#/definitions/ChannelAddress'
          id:
            type: string

    Ping:
      name: ping
      title: Ping Message
      summary: Ping message to test connection
      payload:
        type: object
        required: [type]
        properties:
          type:
            const: ping
          id:
            type: string
          timestamp:
            $ref: './trading-schemas.json#/definitions/UnsignedInteger'

    # Control Responses (sent by server)
    ControlMessages:
      name: controlMessages
      title: Control Messages
      summary: Server control responses
      payload:
        oneOf:
          - $ref: '#/components/schemas/PongMessage'
          - $ref: '#/components/schemas/SubscribedMessage'
          - $ref: '#/components/schemas/UnsubscribedMessage'
          - $ref: '#/components/schemas/ErrorMessage'

    # Data Messages (sent by server)
    MarketsSummaryData:
      name: marketsSummaryData
      title: Markets Summary Data
      summary: All markets summary data (snapshot or update)
      payload:
        oneOf:
          - $ref: '#/components/schemas/MarketsSummarySnapshot'
          - $ref: '#/components/schemas/MarketsSummaryUpdate'

    MarketSummaryData:
      name: marketSummaryData
      title: Market Summary Data
      summary: Single market summary data (snapshot or update)
      payload:
        oneOf:
          - $ref: '#/components/schemas/MarketSummarySnapshot'
          - $ref: '#/components/schemas/MarketSummaryUpdate'

    MarketExecutionData:
      name: marketExecutionData
      title: Market Execution Data
      summary: Market execution data (snapshot or update)
      payload:
        oneOf:
          - $ref: '#/components/schemas/MarketExecutionSnapshot'
          - $ref: '#/components/schemas/MarketExecutionUpdate'

    WalletData:
      name: walletData
      title: Wallet Data
      summary: Wallet-specific data (snapshot or update)
      payload:
        oneOf:
          - $ref: '#/components/schemas/PositionSnapshot'
          - $ref: '#/components/schemas/PositionUpdate'
          - $ref: '#/components/schemas/OrderSnapshot'
          - $ref: '#/components/schemas/OrderUpdate'
          - $ref: '#/components/schemas/WalletExecutionSnapshot'
          - $ref: '#/components/schemas/WalletExecutionUpdate'

    PricesData:
      name: pricesData
      title: Prices Data
      summary: All prices data (snapshot or update)
      payload:
        oneOf:
          - $ref: '#/components/schemas/PricesSnapshot'
          - $ref: '#/components/schemas/PricesUpdate'

    PriceData:
      name: priceData
      title: Price Data
      summary: Single price data (snapshot or update)
      payload:
        oneOf:
          - $ref: '#/components/schemas/PriceSnapshot'
          - $ref: '#/components/schemas/PriceUpdate'

  schemas:
    # Control Message Schemas
    PongMessage:
      allOf:
        - $ref: './trading-schemas.json#/definitions/ControlMessage'
        - type: object
          required: [type]
          properties:
            type:
              const: pong

    SubscribedMessage:
      allOf:
        - $ref: './trading-schemas.json#/definitions/ControlMessage'
        - type: object
          required: [type, channel]
          properties:
            type:
              const: subscribed
            channel:
              $ref: './trading-schemas.json#/definitions/ChannelAddress'

    UnsubscribedMessage:
      allOf:
        - $ref: './trading-schemas.json#/definitions/ControlMessage'
        - type: object
          required: [type, channel]
          properties:
            type:
              const: unsubscribed
            channel:
              $ref: './trading-schemas.json#/definitions/ChannelAddress'

    ErrorMessage:
      allOf:
        - $ref: './trading-schemas.json#/definitions/ControlMessage'
        - type: object
          required: [type, message]
          properties:
            type:
              const: error
            message:
              type: string
              description: Error description

    # Market Data Schemas
    MarketsSummarySnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              const: /v2/markets/summary
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/MarketSummary'

    MarketsSummaryUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              const: /v2/markets/summary
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/MarketSummary'

    MarketSummarySnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              $ref: './trading-schemas.json#/definitions/MarketChannelPattern'
            data:
              $ref: './trading-schemas.json#/definitions/MarketSummary'

    MarketSummaryUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              $ref: './trading-schemas.json#/definitions/MarketChannelPattern'
            data:
              $ref: './trading-schemas.json#/definitions/MarketSummary'

    MarketExecutionSnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/market/[A-Za-z0-9]+/perpExecutions$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/PerpExecution'

    MarketExecutionUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/market/[A-Za-z0-9]+/perpExecutions$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/PerpExecution'

    # Wallet Data Schemas
    PositionSnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/positions$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/Position'

    PositionUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/positions$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/Position'

    OrderSnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/orderChanges$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/Order'

    OrderUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/orderChanges$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/Order'

    WalletExecutionSnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/perpExecutions$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/PerpExecution'

    WalletExecutionUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/perpExecutions$'
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/PerpExecution'

    # Price Data Schemas
    PricesSnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              const: /v2/prices
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/Price'

    PricesUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              const: /v2/prices
            data:
              type: array
              items:
                $ref: './trading-schemas.json#/definitions/Price'

    PriceSnapshot:
      allOf:
        - $ref: './trading-schemas.json#/definitions/SnapshotMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/prices/[A-Za-z0-9]+$'
            data:
              $ref: './trading-schemas.json#/definitions/Price'

    PriceUpdate:
      allOf:
        - $ref: './trading-schemas.json#/definitions/UpdateMessage'
        - type: object
          required: [data]
          properties:
            channel:
              pattern: '^/v2/prices/[A-Za-z0-9]+$'
            data:
              $ref: './trading-schemas.json#/definitions/Price'