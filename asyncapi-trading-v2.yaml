asyncapi: 3.0.0
info:
  title: Reya DEX Trading WebSocket API v2
  version: 2.0.0
  description: Real-time WebSocket API for Reya Network's decentralized exchange. This version provides user-friendly real-time updates with simplified data structures, removing blockchain-specific details and using human-readable formats.
  contact:
    name: Reya Network
    url: https://reya.xyz
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  tags:
    - name: markets
      description: Market data and summaries
    - name: wallet
      description: Wallet-specific data (positions, orders, executions)
    - name: prices
      description: Real-time price feeds
  externalDocs:
    description: Reya Network Documentation
    url: https://docs.reya.xyz

servers:
  production:
    host: ws.reya.xyz
    protocol: wss
    description: Production WebSocket server
  staging:
    host: websocket-staging.reya.xyz
    protocol: wss
    description: Staging WebSocket server
  test:
    host: websocket-testnet.reya.xyz
    protocol: wss
    description: Test WebSocket server

defaultContentType: application/json

channels:
  control:
    description: Channel for control messages like subscribe, unsubscribe, ping, etc.
    address: null
    messages:
      pingMessage:
        $ref: '#/components/messages/PingMessage'
      pongMessage:
        $ref: '#/components/messages/PongMessage'
      subscribeMessage:
        $ref: '#/components/messages/SubscribeMessage'
      unsubscribeMessage:
        $ref: '#/components/messages/UnsubscribeMessage'
      subscribedMessage:
        $ref: '#/components/messages/SubscribedMessage'
      unsubscribedMessage:
        $ref: '#/components/messages/UnsubscribedMessage'
      errorMessage:
        $ref: '#/components/messages/ErrorMessage'
    bindings:
      ws: {}

  marketsSummary:
    address: /v2/markets/summary
    description: Real-time updates for all market summaries
    messages:
      marketsSummaryUpdate:
        $ref: '#/components/messages/MarketsSummaryUpdate'

  marketSummary:
    address: /v2/market/{symbol}/summary
    description: Real-time updates for a specific market's summary
    parameters:
      symbol:
        description: Trading symbol (e.g., BTCRUSDPERP, ETHRUSD)
        location: $message.payload#/symbol
    messages:
      marketSummaryUpdate:
        $ref: '#/components/messages/MarketSummaryUpdate'

  marketPerpExecutions:
    address: /v2/market/{symbol}/perpExecutions
    description: Real-time perpetual executions for a specific market
    parameters:
      symbol:
        description: Trading symbol (e.g., BTCRUSDPERP, ETHRUSD)
        location: $message.payload#/symbol
    messages:
      marketPerpExecutionUpdate:
        $ref: '#/components/messages/MarketPerpExecutionUpdate'

  walletPositions:
    address: /v2/wallet/{address}/positions
    description: Real-time position updates for a wallet
    parameters:
      address:
        description: Ethereum wallet address
        location: $message.payload#/address
    messages:
      positionUpdate:
        $ref: '#/components/messages/PositionUpdate'

  walletOrderChanges:
    address: /v2/wallet/{address}/orderChanges
    description: Real-time order change updates for wallet
    parameters:
      address:
        description: Ethereum wallet address
        location: $message.payload#/address
    messages:
      orderChangeUpdate:
        $ref: '#/components/messages/OrderChangeUpdate'

  walletPerpExecutions:
    address: /v2/wallet/{address}/perpExecutions
    description: Real-time perpetual execution updates for a wallet
    parameters:
      address:
        description: Ethereum wallet address
        location: $message.payload#/address
    messages:
      walletPerpExecutionUpdate:
        $ref: '#/components/messages/WalletPerpExecutionUpdate'

  prices:
    address: /v2/prices
    description: Real-time price updates for all symbols
    messages:
      pricesUpdate:
        $ref: '#/components/messages/PricesUpdate'

  price:
    address: /v2/prices/{symbol}
    description: Real-time price updates for a specific symbol
    parameters:
      symbol:
        description: Trading symbol (e.g., BTCRUSDPERP, ETHRUSD)
        location: $message.payload#/symbol
    messages:
      priceUpdate:
        $ref: '#/components/messages/PriceUpdate'

operations:
  sendPing:
    action: send
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/pingMessage'
    summary: Send ping to check connection
    description: Client sends ping to server.

  sendSubscribe:
    action: send
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/subscribeMessage'
    summary: Send subscribe request
    description: Client sends subscribe to a specific channel.

  sendUnsubscribe:
    action: send
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/unsubscribeMessage'
    summary: Send unsubscribe request
    description: Client sends unsubscribe from a specific channel.

  receivePong:
    action: receive
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/pongMessage'
    summary: Receive pong response

  receiveSubscribed:
    action: receive
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/subscribedMessage'
    summary: Receive confirmation of subscription

  receiveUnsubscribed:
    action: receive
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/unsubscribedMessage'
    summary: Receive confirmation of unsubscription

  receiveError:
    action: receive
    channel:
      $ref: '#/channels/control'
    messages:
      - $ref: '#/channels/control/messages/errorMessage'
    summary: Receive error messages

  receiveMarketsSummary:
    action: receive
    channel:
      $ref: '#/channels/marketsSummary'
    messages:
      - $ref: '#/channels/marketsSummary/messages/marketsSummaryUpdate'
    summary: Receive market summaries updates

  receiveMarketSummary:
    action: receive
    channel:
      $ref: '#/channels/marketSummary'
    messages:
      - $ref: '#/channels/marketSummary/messages/marketSummaryUpdate'
    summary: Receive specific market summary updates

  receiveMarketPerpExecutions:
    action: receive
    channel:
      $ref: '#/channels/marketPerpExecutions'
    messages:
      - $ref: '#/channels/marketPerpExecutions/messages/marketPerpExecutionUpdate'
    summary: Receive perpetual execution updates for market

  receiveWalletPositions:
    action: receive
    channel:
      $ref: '#/channels/walletPositions'
    messages:
      - $ref: '#/channels/walletPositions/messages/positionUpdate'
    summary: Receive position updates for wallet

  receiveWalletOrderChanges:
    action: receive
    channel:
      $ref: '#/channels/walletOrderChanges'
    messages:
      - $ref: '#/channels/walletOrderChanges/messages/orderChangeUpdate'
    summary: Receive order change updates for wallet

  receiveWalletPerpExecutions:
    action: receive
    channel:
      $ref: '#/channels/walletPerpExecutions'
    messages:
      - $ref: '#/channels/walletPerpExecutions/messages/walletPerpExecutionUpdate'
    summary: Receive perpetual execution updates for wallet

  receivePrices:
    action: receive
    channel:
      $ref: '#/channels/prices'
    messages:
      - $ref: '#/channels/prices/messages/pricesUpdate'
    summary: Receive price updates for all symbols

  receivePrice:
    action: receive
    channel:
      $ref: '#/channels/price'
    messages:
      - $ref: '#/channels/price/messages/priceUpdate'
    summary: Receive price updates for specific symbol

components:
  messages:
    MarketsSummaryUpdate:
      name: marketsSummaryUpdate
      title: Markets Summary Update
      summary: Real-time update containing all market summaries
      payload:
        $ref: '#/components/schemas/MarketsSummaryUpdatePayload'

    MarketSummaryUpdate:
      name: marketSummaryUpdate
      title: Market Summary Update
      summary: Real-time update for a specific market summary
      payload:
        $ref: '#/components/schemas/MarketSummaryUpdatePayload'

    PositionUpdate:
      name: positionUpdate
      title: Position Update
      summary: Real-time position update for a wallet
      payload:
        $ref: '#/components/schemas/PositionUpdatePayload'

    OrderChangeUpdate:
      name: orderChangeUpdate
      title: Order Change Update
      summary: Real-time order change update for a wallet
      payload:
        $ref: '#/components/schemas/OrderChangeUpdatePayload'

    MarketPerpExecutionUpdate:
      name: marketPerpExecutionUpdate
      title: Market Perpetual Execution Update
      summary: Real-time perpetual execution update for market
      payload:
        $ref: '#/components/schemas/MarketPerpExecutionUpdatePayload'

    WalletPerpExecutionUpdate:
      name: walletPerpExecutionUpdate
      title: Wallet Perpetual Execution Update
      summary: Real-time perpetual execution update for wallet
      payload:
        $ref: '#/components/schemas/WalletPerpExecutionUpdatePayload'

    PricesUpdate:
      name: pricesUpdate
      title: Prices Update
      summary: Real-time price updates for all symbols
      payload:
        $ref: '#/components/schemas/PricesUpdatePayload'

    PriceUpdate:
      name: priceUpdate
      title: Price Update
      summary: Real-time price update for a specific symbol
      payload:
        $ref: '#/components/schemas/PriceUpdatePayload'

    PingMessage:
      name: ping
      title: Ping Message
      summary: Ping message to check connection
      payload:
        $ref: '#/components/schemas/PingMessagePayload'

    PongMessage:
      name: pong
      title: Pong Message
      summary: Pong response from server
      payload:
        $ref: '#/components/schemas/PongMessagePayload'

    SubscribeMessage:
      name: subscribe
      title: Subscribe Message
      summary: Subscribe to a channel
      payload:
        $ref: '#/components/schemas/SubscribeMessagePayload'

    UnsubscribeMessage:
      name: unsubscribe
      title: Unsubscribe Message
      summary: Unsubscribe from a channel
      payload:
        $ref: '#/components/schemas/UnsubscribeMessagePayload'

    SubscribedMessage:
      name: subscribed
      title: Subscribed Message
      summary: Confirmation of successful subscription
      payload:
        $ref: '#/components/schemas/SubscribedMessagePayload'

    UnsubscribedMessage:
      name: unsubscribed
      title: Unsubscribed Message
      summary: Confirmation of successful unsubscription
      payload:
        $ref: '#/components/schemas/UnsubscribedMessagePayload'

    ErrorMessage:
      name: error
      title: Error Message
      summary: Error message
      payload:
        $ref: '#/components/schemas/ErrorMessagePayload'

  parameters:
    Symbol:
      description: Trading symbol (e.g., BTCRUSDPERP, ETHRUSD)
      location: $message.payload#/symbol

    Address:
      description: Ethereum wallet address
      location: $message.payload#/address

  schemas:
    # Common message type enums
    ChannelDataMessageType:
      type: string
      enum:
        - channel_data
      description: Message type for channel data updates

    PingMessageType:
      type: string
      enum:
        - ping
      description: Message type for ping messages

    PongMessageType:
      type: string
      enum:
        - pong
      description: Message type for pong messages

    SubscribeMessageType:
      type: string
      enum:
        - subscribe
      description: Message type for subscribe messages

    UnsubscribeMessageType:
      type: string
      enum:
        - unsubscribe
      description: Message type for unsubscribe messages

    SubscribedMessageType:
      type: string
      enum:
        - subscribed
      description: Message type for subscribed confirmation messages

    UnsubscribedMessageType:
      type: string
      enum:
        - unsubscribed
      description: Message type for unsubscribed confirmation messages

    ErrorMessageType:
      type: string
      enum:
        - error
      description: Message type for error messages

    # Common channel patterns
    MarketsSummaryChannel:
      type: string
      enum:
        - /v2/markets/summary
      description: Channel for all markets summary updates

    PricesChannel:
      type: string
      enum:
        - /v2/prices
      description: Channel for all prices updates

    MarketSummaryChannelPattern:
      type: string
      pattern: '^/v2/market/[A-Za-z0-9]+/summary$'
      description: Channel pattern for specific market summary updates

    MarketPerpExecutionsChannelPattern:
      type: string
      pattern: '^/v2/market/[A-Za-z0-9]+/perpExecutions$'
      description: Channel pattern for market perpetual executions

    WalletPositionsChannelPattern:
      type: string
      pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/positions$'
      description: Channel pattern for wallet positions updates

    WalletOrderChangesChannelPattern:
      type: string
      pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/orderChanges$'
      description: Channel pattern for wallet order changes

    WalletPerpExecutionsChannelPattern:
      type: string
      pattern: '^/v2/wallet/0x[a-fA-F0-9]{40}/perpExecutions$'
      description: Channel pattern for wallet perpetual executions

    PriceChannelPattern:
      type: string
      pattern: '^/v2/prices/[A-Za-z0-9]+$'
      description: Channel pattern for specific price updates

    BaseUpdateEnvelope:
      type: object
      additionalProperties: false
      required:
        - type
        - timestamp
      properties:
        type:
          $ref: '#/components/schemas/ChannelDataMessageType'
        timestamp:
          type: number
          description: Update timestamp (milliseconds)
          example: 1747927089946

    MarketsSummaryUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/MarketsSummaryChannel'
        data:
          type: array
          items:
            $ref: './trading-schemas.json#/definitions/MarketSummary'

    MarketSummaryUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/MarketSummaryChannelPattern'
        data:
          $ref: './trading-schemas.json#/definitions/MarketSummary'

    PositionUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/WalletPositionsChannelPattern'
        data:
          type: array
          items:
            $ref: './trading-schemas.json#/definitions/Position'

    OrderChangeUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/WalletOrderChangesChannelPattern'
        data:
          type: array
          items:
            $ref: './trading-schemas.json#/definitions/Order'

    MarketPerpExecutionUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/MarketPerpExecutionsChannelPattern'
        data:
          type: array
          items:
            $ref: './trading-schemas.json#/definitions/PerpExecution'

    WalletPerpExecutionUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/WalletPerpExecutionsChannelPattern'
        data:
          type: array
          items:
            $ref: './trading-schemas.json#/definitions/PerpExecution'

    PricesUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/PricesChannel'
        data:
          type: array
          items:
            $ref: './trading-schemas.json#/definitions/Price'

    PriceUpdateBody:
      type: object
      additionalProperties: false
      required:
        - channel
        - data
      properties:
        channel:
          $ref: '#/components/schemas/PriceChannelPattern'
        data:
          $ref: './trading-schemas.json#/definitions/Price'

    MarketsSummaryUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/MarketsSummaryUpdateBody'

    MarketSummaryUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/MarketSummaryUpdateBody'

    PositionUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/PositionUpdateBody'

    OrderChangeUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/OrderChangeUpdateBody'

    MarketPerpExecutionUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/MarketPerpExecutionUpdateBody'

    WalletPerpExecutionUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/WalletPerpExecutionUpdateBody'

    PricesUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/PricesUpdateBody'

    PriceUpdatePayload:
      allOf:
        - $ref: '#/components/schemas/BaseUpdateEnvelope'
        - $ref: '#/components/schemas/PriceUpdateBody'

    PingMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/PingMessageType'
        timestamp:
          type: integer
          description: Optional timestamp in milliseconds
          example: 1747927089946
      required:
        - type

    PongMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/PongMessageType'
        timestamp:
          type: integer
          description: Optional timestamp in milliseconds
          example: 1747927089946
      required:
        - type

    SubscribeMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/SubscribeMessageType'
        channel:
          type: string
          description: Channel path to subscribe to
          example: /v2/markets/summary
        id:
          type: string
          description: Optional request identifier
          example: "req123"
      required:
        - type
        - channel

    UnsubscribeMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/UnsubscribeMessageType'
        channel:
          type: string
          description: Channel path to unsubscribe from
          example: /v2/markets/summary
        id:
          type: string
          description: Optional request identifier
          example: "req123"
      required:
        - type
        - channel

    SubscribedMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/SubscribedMessageType'
        channel:
          type: string
          description: Channel that was subscribed to
          example: /v2/markets/summary
        contents:
          type: object
          description: Optional initial data for the subscription
      required:
        - type
        - channel

    UnsubscribedMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/UnsubscribedMessageType'
        channel:
          type: string
          description: Channel that was unsubscribed from
          example: /v2/markets/summary
      required:
        - type
        - channel

    ErrorMessagePayload:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ErrorMessageType'
        message:
          type: string
          description: Error description
          example: "Invalid channel"
        channel:
          type: string
          description: Optional channel related to the error
          example: /v2/markets/summary
      required:
        - type
        - message